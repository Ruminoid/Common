<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:visualIcon="clr-namespace:VisualIcon;assembly=VisualIcon">
    <!--Text Styles-->
    <Style x:Key="ShellHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="96,0,0,0" />
        <Setter Property="FontSize" Value="48" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="ShellTitleTextStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,12" />
        <Setter Property="FontSize" Value="24" />
    </Style>

    <!--Dashboard-->
    <Style x:Key="DashboardTabControlStyle" TargetType="TabControl">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="*" />
                            <RowDefinition x:Name="RowDefinition1" Height="Auto" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" HorizontalAlignment="Center"
                                  Background="Transparent" Grid.Column="0" IsItemsHost="True"
                                  Margin="12" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="0"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent" Margin="0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DashboardTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent" Margin="6 0">
                        <Border x:Name="_underline" BorderBrush="{DynamicResource AccentBrushKey}" BorderThickness="0"
                                Margin="{TemplateBinding Margin}" />
                        <Grid>
                            <TextBlock x:Name="txt" Visibility="Visible" VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Text="{TemplateBinding Header}"
                                       Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis"
                                       Margin="8" FontSize="18">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{TemplateBinding Header}"
                                             FontSize="{Binding FontSize, ElementName=templateRoot}" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Top" />
                            </MultiDataTrigger.Conditions>

                            <Setter Property="Foreground" TargetName="txt" Value="{DynamicResource AccentBrushKey}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=TabControl}}"
                                    Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Foreground" TargetName="txt" Value="{DynamicResource AccentBrushKey}" />
                            <Setter Property="BorderThickness" TargetName="_underline" Value="0 0 0 2" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LockToggleButtonStyle" TargetType="ToggleButton"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Height" Value="34" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <visualIcon:Icon>
                        <visualIcon:Icon.Style>
                            <Style TargetType="visualIcon:Icon">
                                <Setter Property="Type" Value="Lock" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=ToggleButton}}"
                                        Value="true">
                                        <Setter Property="Type" Value="UnLock" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </visualIcon:Icon.Style>
                    </visualIcon:Icon>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoFocusListViewStyle" TargetType="ListView">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="false" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoBorderListViewStyle" TargetType="ListView">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Grid>
                                    <GridViewRowPresenter />
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>